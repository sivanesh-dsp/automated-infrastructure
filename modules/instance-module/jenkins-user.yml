---
- name: Automated Jenkins Installation and User Creation
  hosts: all
  become: yes

  vars:
    new_user: "jenkinsuser"
    new_user_password: "jenkinspassword"
    jenkins_plugins:
      - git
      - workflow-aggregator
      - credentials
      - job-dsl
      - sonar

  tasks:    
    - name: Disable Jenkins setup wizard
      lineinfile:
       dest=/etc/default/jenkins
       regexp=^JAVA_ARGS=
       line=JAVA_ARGS="-Djava.awt.headless=true -Djenkins.install.runSetupWizard=false"
      become: true

    - name: Ensure Jenkins is running
      service:
        name: jenkins
        state: started
        enabled: yes

    - name: Make sure service has time to start  # to not get 503 server error for downloading cli.jar
      pause:
        seconds: 60

    - name: Install Jenkins CLI
      get_url:
        url: "http://localhost:8080/jnlpJars/jenkins-cli.jar"
        dest: "/usr/local/bin/jenkins-cli.jar"
        mode: '0755'

    - name: Get Jenkins initial admin password
      command: cat /var/lib/jenkins/secrets/initialAdminPassword
      register: jenkins_admin_password

    - name: Create Jenkins user
      shell: |
        echo 'jenkins.model.Jenkins.instance.securityRealm.createAccount("{{ new_user }}", "{{ new_user_password }}")' | \
        java -jar /usr/local/bin/jenkins-cli.jar -s http://localhost:8080/ -auth admin:{{ jenkins_admin_password.stdout }} groovy =

    - name: Install Jenkins plugins
      shell: |
        for plugin in {{ jenkins_plugins | join(' ') }}; do
          java -jar /usr/local/bin/jenkins-cli.jar -s http://localhost:8080/ -auth {{ new_user }}:{{ new_user_password }} install-plugin $plugin
        done
      register: plugin_installation_output
      notify: restart jenkins

  handlers:
    - name: restart jenkins
      service:
        name: jenkins
        state: restarted
